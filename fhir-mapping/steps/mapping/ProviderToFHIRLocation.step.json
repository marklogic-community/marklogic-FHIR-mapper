{
  "collections": [
    "ProviderToFHIRLocation",
    "USCoreLocation"
  ],
  "additionalCollections": [ ],
  "permissions": "data-hub-common,read,data-hub-common,update",
  "batchSize": 100,
  "validateEntity": "doNotValidate",
  "targetFormat": "JSON",
  "name": "ProviderToFHIRLocation",
  "targetEntityType": "http://example.org/USCoreLocation-1.0.0/USCoreLocation",
  "description": "",
  "selectedSource": "collection",
  "sourceQuery": "cts.collectionQuery(['pretransformed-ProviderLocation'])",
  "sourceDatabase": "data-hub-STAGING",
  "targetDatabase": "data-hub-FINAL",
  "headers": { },
  "interceptors": [
    {
      "path": "/lib/interceptors/expand-instance.sjs",
      "when": "beforeMain",
      "vars": {
        "entireRecord": true,
        "destination": "location",
        "indexDestination": "index",
        "siblingName": "providerLocations"
      }
    },
    {
      "path": "/lib/interceptors/flat-to-multiple.sjs",
      "when": "beforeMain",
      "vars": {
        "entireRecord": true,
        "entries": [
          {
            "dest": "telecom",
            "breakouts": [
              {
                "type": "phone",
                "xpath": "/envelope/instance/location/phoneNumber[string-length(concat(number, ext)) gt 0]"
              },
              {
                "type": "email",
                "xpath": "/envelope/instance/location/email[text() and string-length() gt 0]"
              },
              {
                "type": "fax",
                "xpath": "/envelope/instance/location/faxNumber[text() and string-length() gt 0]"
              }
            ]
          }
        ]
      }
    },
    {
      "path": "/lib/interceptors/unwrap-es-fhir.sjs",
      "when": "beforeContentPersisted"
    }
  ],
  "provenanceGranularityLevel": "coarse",
  "customHook": { },
  "stepDefinitionName": "entity-services-mapping",
  "stepDefinitionType": "mapping",
  "stepId": "ProviderToFHIRLocation-mapping",
  "lastUpdated": "2021-04-29T13:42:46.1926207-06:00",
  "$uriExpressionNote": "We're using this to perform in-memory mappings of documents which do not write to disk, so the actual URI expression doesn't matter so long as it doesn't evaluate to `null` at runtime",
  "uriExpression": "\"/temp.json\"",
  "sourceRecordScope": "entireRecord",
  "properties": {
    "id": {
      "sourcedFrom": "concat(envelope/headers/metadata/publicID, \"-providerLocations-\", envelope/instance/index)"
    },
    "meta": {
      "sourcedFrom": "envelope/headers/metadata",
      "properties": {
        "id": {
          "sourcedFrom": "concat(publicID, \"-providerLocations-\", /envelope/instance/index)"
        },
        "versionId": {
          "sourcedFrom": "hashValue"
        },
        "lastUpdated": {
          "sourcedFrom": "ingestTimestamp"
        },
        "profile": {
          "sourcedFrom": "\"http://hl7.org/fhir/us/davinci-pdex-plan-net/STU1/StructureDefinition-plannet-Location.html\""
        },
        "source": {
          "sourcedFrom": "\"MMIS-PROVIDER\""
        }
      },
      "targetEntityType": "#/definitions/Meta"
    },
    "language": {
      "sourcedFrom": "\"en-us\""
    },
    "status": {
      "sourcedFrom": "if(isActive(envelope/instance/location/effectiveDate, envelope/instance/location/expirationDate)) then \"active\" else \"inactive\""
    },
    "name": {
      "sourcedFrom": "if(string-length(envelope/instance/location/address/line2) eq 0) then concat(envelope/instance/location/address/line1, \", \", envelope/instance/location/address/city, \", \", envelope/instance/location/address/state) else concat(envelope/instance/location/address/line2, \", \", envelope/instance/location/address/line1, \", \", envelope/instance/location/address/city, \", \", envelope/instance/location/address/state)"
    },
    "telecom": {
      "sourcedFrom": "envelope/instance/telecom",
      "properties": {
        "system": {
          "sourcedFrom": "type"
        },
        "value": {
          "sourcedFrom": "if(type eq \"phone\") then concat(source/number, source/ext) else source"
        },
        "use": {
          "sourcedFrom": "\"work\""
        },
        "period": {
          "sourcedFrom": "/envelope/instance/location",
          "properties": {
            "id": {
              "sourcedFrom": ""
            },
            "start": {
              "sourcedFrom": "effectiveDate"
            },
            "end": {
              "sourcedFrom": "expirationDate"
            }
          },
          "targetEntityType": "#/definitions/Period"
        },
        "id": {
          "sourcedFrom": ""
        }
      },
      "targetEntityType": "#/definitions/ContactPoint"
    },
    "address": {
      "sourcedFrom": "envelope/instance/location/address",
      "properties": {
        "line": {
          "sourcedFrom": "(line1|line2|line3)[string-length() gt 0]"
        },
        "city": {
          "sourcedFrom": "city"
        },
        "district": {
          "sourcedFrom": "county"
        },
        "state": {
          "sourcedFrom": "state"
        },
        "postalCode": {
          "sourcedFrom": "zip"
        },
        "type": {
          "sourcedFrom": "customMemoryLookup(addresstype[1],'{\"MAILING\": \"postal\", \"PRIMARY\": \"physical\"}')"
        },
        "country": {
          "sourcedFrom": "\"USA\""
        },
        "use": {
          "sourcedFrom": "customMemoryLookup(addresstype[1],'{\"LEGAL\": \"billing\", \"PRIMARY\": \"work\"}')"
        },
        "period": {
          "sourcedFrom": "..",
          "properties": {
            "start": {
              "sourcedFrom": "effectiveDate"
            },
            "end": {
              "sourcedFrom": "expirationDate"
            }
          },
          "targetEntityType": "#/definitions/Period"
        }
      },
      "targetEntityType": "#/definitions/Address"
    },
    "resourceType": {
      "sourcedFrom": "\"Location\""
    },     
    "hoursOfOperation": {
      "sourcedFrom": "envelope/instance/location/hours",
      "properties": {
        "daysOfWeek": {
          "sourcedFrom": "lower-case(dayOfWeek)"
        },
        "allDay": {
          "sourcedFrom": "isOpen24Hours"
        },
        "openingTime": {
          "sourcedFrom": "openTime"
        },
        "closingTime": {
          "sourcedFrom": "closeTime"
        }
      },
      "targetEntityType": "#/definitions/HoursOfOperation"
    },
    "text": {
      "sourcedFrom": "",
      "properties": {
        "id": {
          "sourcedFrom": ""
        }
      },
      "targetEntityType": "#/definitions/Narrative"
    },
    "identifier": {
      "sourcedFrom": "",
      "properties": {
        "id": {
          "sourcedFrom": ""
        },
        "type": {
          "sourcedFrom": ""
        }
      },
      "targetEntityType": "#/definitions/Identifier"
    },
    "operationalStatus": {
      "sourcedFrom": "",
      "properties": {
        "id": {
          "sourcedFrom": ""
        }
      },
      "targetEntityType": "#/definitions/Coding"
    }   
  }
}
